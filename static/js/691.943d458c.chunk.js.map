{"version":3,"file":"static/js/691.943d458c.chunk.js","mappings":"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","sources":["webpack://first-react-project/./src/conponents/Dialogs/Dialogs.module.css?8357","webpack://first-react-project/./src/conponents/Dialogs/Dialog/Dialog.module.css?01a8","conponents/Dialogs/Dialog/Dialog.jsx","conponents/Dialogs/Message/Message.module.css","conponents/Dialogs/Message/Message.jsx","webpack://first-react-project/./src/conponents/Dialogs/DialogsForm/DialogsForm.module.css?968e","conponents/Dialogs/DialogsForm/DialogsForm.jsx","conponents/Dialogs/DialogsForm/DialogsFormContainer.jsx","hoc/withAuthRedirect.js","conponents/Dialogs/DialogsContainer.jsx","conponents/Dialogs/Dialogs.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__HrCyJ\",\"dialogItems\":\"Dialogs_dialogItems__16ozl\",\"messageItems\":\"Dialogs_messageItems__OhkW6\"};","// extracted by mini-css-extract-plugin\nexport default {\"dialog\":\"Dialog_dialog__K1R5f\"};","import classes from './Dialog.module.css';\nimport { NavLink } from 'react-router-dom';\n\nexport const Dialog = ({name, id}) => {\n  const path = `/dialogs/${id}`;\n\n  return (\n    <div className={`${classes.dialog}`}>\n      <NavLink to={path}>{name}</NavLink>\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"message\":\"Message_message__4cXD9\"};","import classes from './Message.module.css';\n\nexport const Message = ({message}) => {\n  return (\n    <div className={classes.message}>{message}</div>\n  )\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"error\":\"DialogsForm_error__z8Bk3\"};","import { ErrorMessage, Form } from 'formik';\r\nimport classes from './DialogsForm.module.css';\r\nimport { createField } from '../../../utilits/helpers/form-heplers';\r\n\r\nexport const DialogsForm = ({isSubmitting}) => {\r\n  return (\r\n    <Form>\r\n      {createField('text', 'textarea', 'Text')}\r\n      <ErrorMessage name=\"text\" component=\"div\" className={classes.error} />\r\n      <button type={'submit'} disabled={isSubmitting}>Add message</button>\r\n    </Form>\r\n  );\r\n};\r\n","import { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { DialogsForm } from './DialogsForm';\r\n\r\nconst validationSchemaDialogsForm = Yup.object().shape({\r\n  text: Yup.string()\r\n    .max(50, 'Must be shorter than 50 characters')\r\n    .required('Required')\r\n});\r\n\r\nexport const DialogsFormContainer = ({addMessage}) => {\r\n  const submit = (formData, {setSubmitting, resetForm}) => {\r\n    addMessage(formData.text);\r\n    setSubmitting(false);\r\n    resetForm();\r\n  }\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{text: ''}}\r\n      validationSchema={validationSchemaDialogsForm}\r\n      onSubmit={submit}\r\n    >\r\n      {({isSubmitting}) => (\r\n        <DialogsForm isSubmitting={isSubmitting} />\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n","import { Navigate } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nconst mapStateToPropsForRedirect = (state) => ({\r\n  isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const WithAuthRedirect = (Component) => {\r\n  const AuthRedirectComponent = (props) => {\r\n    if (!props.isAuth) {\r\n      return <Navigate to={'/login'} />\r\n    }\r\n    return < Component {...props} />\r\n  };\r\n\r\n  return connect(mapStateToPropsForRedirect)(AuthRedirectComponent);\r\n};\r\n","import { addMessage } from '../../redux/dialogs-reducer';\nimport { Dialogs } from './Dialogs';\nimport { connect } from 'react-redux';\nimport { WithAuthRedirect } from '../../hoc/withAuthRedirect';\nimport { compose } from 'redux';\n\nconst mapStateToProps = (state) => ({\n  dialogs: state.dialogsPage.dialogs,\n  messages: state.dialogsPage.messages\n});\nconst mapDispatchToProps = {addMessage};\n\nconst DialogsContainer = compose(\n  connect(mapStateToProps, mapDispatchToProps),\n  WithAuthRedirect,\n)(Dialogs);\n\nexport default DialogsContainer;\n","import classes from './Dialogs.module.css';\nimport { Dialog } from './Dialog/Dialog';\nimport { Message } from './Message/Message';\nimport { DialogsFormContainer } from './DialogsForm/DialogsFormContainer';\n\nexport const Dialogs = ({dialogs, messages, addMessage}) => {\n  const dialogsElements = dialogs\n    .map((dialog, index) => <Dialog name={dialog.name} id={dialog.id} key={index} />);\n  const messagesElements = messages\n    .map((message, index) => <Message message={message.message} key={index} />);\n\n  return (\n    <div className={classes.dialogs}>\n      <div className={classes.dialogItems}>\n        {dialogsElements}\n      </div>\n      <div className={classes.messageItems}>\n        <div>{messagesElements}</div>\n        <DialogsFormContainer addMessage={addMessage} />\n      </div>\n    </div>\n  );\n};\n"],"names":["Dialog","_ref","name","id","path","concat","_jsx","className","classes","children","NavLink","to","Message","message","DialogsForm","isSubmitting","_jsxs","Form","createField","ErrorMessage","component","type","disabled","validationSchemaDialogsForm","Yup","shape","text","max","required","DialogsFormContainer","addMessage","Formik","initialValues","validationSchema","onSubmit","formData","_ref2","setSubmitting","resetForm","_ref3","mapStateToPropsForRedirect","state","isAuth","auth","mapDispatchToProps","compose","connect","dialogs","dialogsPage","messages","Component","props","_objectSpread","Navigate","dialogsElements","map","dialog","index","messagesElements"],"sourceRoot":""}